
PREFIX sp: <http://spinrdf.org/sp#>
PREFIX spin: <http://spinrdf.org/spin#>
PREFIX spl: <http://spinrdf.org/spl#>
PREFIX ephedra: <http://www.researchspace.org/resource/system/ephedra#>
PREFIX rs_sql_sail: <http://www.researchspace.org/resource/system/sql#>
PREFIX veniss_sql: <http://www.researchspace.org/resource/system/service/veniss_sql#>
PREFIX : <http://www.researchspace.org/resource/system/service/custom#>

:geosql a ephedra:Service ;
	<http://www.openrdf.org/config/sail#sailType> "researchspace:SQL" ;
	rdfs:label "A wrapper for the SQL test service." ;
	ephedra:hasSPARQLPattern (
		[
			sp:subject :_results ;
			sp:predicate rs_sql_sail:hasQueryId ;
			sp:object :_queryId
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:wkt ;
			sp:object :_wkt
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:minX ;
			sp:object :_MinX
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:minY ;
			sp:object :_MinY
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:maxX ;
			sp:object :_MaxX
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:maxY ;
			sp:object :_MaxY
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:bw_id ;
			sp:object :_bw_id
		]
		[
			sp:subject :_results ;
			sp:predicate veniss_sql:date ;
			sp:object :_date
		]
    [
			sp:subject :_results ;
			sp:predicate veniss_sql:t ;
			sp:object :_t
		]
    [
			sp:subject :_results ;
			sp:predicate veniss_sql:z ;
			sp:object :_z
		]
    [
			sp:subject :_results ;
			sp:predicate veniss_sql:bob ;
			sp:object :_bob
		]
    [
			sp:subject :_results ;
			sp:predicate veniss_sql:eob ;
			sp:object :_eob
		]
    [
			sp:subject :_results ;
			sp:predicate veniss_sql:boe ;
			sp:object :_boe
		]
    [
			sp:subject :_results ;
			sp:predicate veniss_sql:eoe ;
			sp:object :_eoe
		]
        [
			sp:subject :_results ;
			sp:predicate veniss_sql:tableName ;
			sp:object :_tablename
		]
	) ;
	spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "query ID" ;
		spl:predicate :_queryId ;
		spl:valueType xsd:string
  ] ;
  spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "Minimum X" ;
		spl:predicate :_MinX ;
		spl:valueType xsd:float
  ] ;
  spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "Minimum Y" ;
		spl:predicate :_MinY ;
		spl:valueType xsd:float
  ] ;
  spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "Maximum X" ;
		spl:predicate :_MaxX ;
		spl:valueType xsd:float
  ] ;
  spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "Maximum Y" ;
		spl:predicate :_MaxY ;
		spl:valueType xsd:float
  ] ;
  spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "Date to filter" ;
		spl:predicate :_date ;
		spl:valueType xsd:string
  ] ;
    spin:constraint
	[
		a spl:Argument ;
		rdfs:comment "Table Name as parameter" ;
		spl:predicate :_tablename ;
		spl:valueType xsd:string
  ] ;
	spin:column
	[
		a spin:Column ;
		rdfs:comment "Row index: will be assigned a random blank node" ;
		spl:predicate :_results ;
		spl:valueType rdfs:Resource
	] ;
	spin:column
	[
		a spin:Column ;
		rdfs:comment "Geometry column" ;
		spl:predicate :_wkt ;
		spl:valueType xsd:string
	] ;
  spin:column
	[
		a spin:Column ;
		rdfs:comment "Begin of the Begin (uncertain)" ;
		spl:predicate :_bob ;
		spl:valueType xsd:string
	] ;
  spin:column
	[
		a spin:Column ;
		rdfs:comment "End of the Begin (certain)" ;
		spl:predicate :_eob ;
		spl:valueType xsd:string
	] ;
  spin:column
	[
		a spin:Column ;
		rdfs:comment "Begin of the End (certain)" ;
		spl:predicate :_boe ;
		spl:valueType xsd:string
	] ;
  spin:column
	[
		a spin:Column ;
		rdfs:comment "End of the End (uncertain)" ;
		spl:predicate :_eoe ;
		spl:valueType xsd:string
	] ;
	spin:column
	[
		a spin:Column ;
		rdfs:comment "Builtwork ID" ;
		spl:predicate :_bw_id ;
		spl:valueType xsd:string
	] ;
  
	spin:column
	[
		a spin:Column ;
		rdfs:comment "Feature typology" ;
		spl:predicate :_t ;
		spl:valueType xsd:string
	] ;
	spin:column
	[
		a spin:Column ;
		rdfs:comment "Feature z index" ;
		spl:predicate :_z ;
		spl:valueType xsd:string
	] ;
	rs_sql_sail:includesSQLQuery
	[
		rs_sql_sail:hasQueryId "base" ;
		rs_sql_sail:text "select distinct \"BW_ID\" as bw_id, ST_AsText(geo) as wkt from veniss_sql_table where ST_WITHIN(geo, ST_MakeEnvelope(?MinX, ?MinY, ?MaxX, ?MaxY, 3857))" ;
	] ;
  rs_sql_sail:includesSQLQuery
	[
		rs_sql_sail:hasQueryId "production" ;
		rs_sql_sail:text "SELECT DISTINCT bw_id, bob, eob, boe, eoe, ST_AsText(geom) as wkt FROM sansecondo_buildings WHERE ST_WITHIN(geom, ST_MakeEnvelope(?MinX, ?MinY, ?MaxX, ?MaxY, 3857))" ;
	] ;
	rs_sql_sail:includesSQLQuery
	[
		rs_sql_sail:hasQueryId "test" ;
		rs_sql_sail:text "SELECT DISTINCT a.identifier as bw_id, t, z, \"year\" as date, ST_AsText(geometry) as wkt FROM veniss_data AS a JOIN feature_years AS b ON a.identifier = b.identifier WHERE ST_WITHIN(geometry, ST_MakeEnvelope(?MinX, ?MinY, ?MaxX, ?MaxY, 3857))"
	] ;
	rs_sql_sail:includesSQLQuery
	[
		rs_sql_sail:hasQueryId "island_form" ;
		rs_sql_sail:text "select distinct \"BW_ID\" as bw_id, ST_AsText(geometry) as wkt from ?tablename "

	] .

