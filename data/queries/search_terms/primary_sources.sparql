PREFIX ontology: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX crm:  <http://www.cidoc-crm.org/cidoc-crm/>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX veniss_ontology: <https://veniss.net/ontology#>
PREFIX veniss_types: <https://veniss.net/resource/type/>

INSERT {
  ?item crm:P1_is_identified_by ?st .
  ?st a crm:E41_Appellation ;
      crm:P2_has_type veniss_types:search_term ;
      rdfs:label ?label .
}
WHERE {
  ?item rdf:type veniss_ontology:Source_Primary .

  # Exclude items that already have a search_term appellation
  FILTER NOT EXISTS {
    ?item crm:P1_is_identified_by ?existingSt .
    ?existingSt a crm:E41_Appellation ;
                crm:P2_has_type veniss_types:search_term .
  }

  # ---- one attributed-title per (item, language) ----
  {
    SELECT ?item ?lang (SAMPLE(STR(?al)) AS ?title)
    WHERE {
      ?item crm:P1_is_identified_by ?appellation .
      ?appellation a crm:E41_Appellation ;
                   crm:P2_has_type veniss_types:attributed_title ;
                   rdfs:label ?al .
      BIND(LANG(?al) AS ?lang)
    }
    GROUP BY ?item ?lang
  }

  # ---- collapse island to a single value (language-neutral) ----
  OPTIONAL {
    SELECT ?item (SAMPLE(STR(?il)) AS ?island)
    WHERE {
      ?item veniss_ontology:has_island ?islandRes .
      ?islandRes crm:P1_is_identified_by ?island_appellation .
      ?island_appellation rdfs:label ?il .
    }
    GROUP BY ?item
  }

  # ---- collapse year/time to a single value (language-neutral) ----
  OPTIONAL {
    SELECT ?item (SAMPLE(STR(?tl)) AS ?year)
    WHERE {
      ?item crm:P108i_was_produced_by ?production .
      ?production crm:P4_has_time-span ?timespan .
      ?timespan crm:P170i_time_is_defined_by ?time_primitive .
      ?time_primitive crm:P2_has_type veniss_types:time_primitive_year ;
                      rdfs:label ?tl .
    }
    GROUP BY ?item
  }

  # Build the label string and tag it with the title's language
  BIND(CONCAT(
        ?title,
        IF(BOUND(?island) || BOUND(?year), " ", ""),
        COALESCE(?island, ""),
        IF(BOUND(?island) && BOUND(?year), " ", ""),
        COALESCE(?year, "")
      ) AS ?labelStr)

  BIND(STRLANG(?labelStr, ?lang) AS ?label)

  # Create a fresh IRI for the new search-term node (note: use ?item, not $item)
  BIND( IRI(CONCAT(STR(?item), "/search_term/", STRUUID())) AS ?st )
}